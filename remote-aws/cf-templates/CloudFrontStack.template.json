{
 "Parameters": {
  "uniqueId": {
   "Type": "String",
   "AllowedPattern": "^[a-z0-9-]{1,32}$",
   "Description": "Unique element for bucket naming"
  },
  "codeBucketName": {
   "Type": "String",
   "Default": "instruct-code-2560df37ccbefd6b43eeb50fdc8abe7f",
   "AllowedPattern": "^[a-z0-9.-]{1,63}$",
   "Description": "Code bucket name"
  },
  "codeBucketRegion": {
   "Type": "String",
   "Default": "us-east-1",
   "AllowedPattern": "^[a-z0-9-]{1,12}$",
   "Description": "Code Bucket Region"
  },
  "domainName": {
   "Type": "String",
   "AllowedPattern": "[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)",
   "Description": "Registered Domain Name"
  },
  "certificateArn": {
   "Type": "String",
   "AllowedPattern": "^[a-z0-9\\.\\/\\:-]{1,2048}$",
   "Description": "ARN of certificate"
  },
  "userEmail": {
   "Type": "String",
   "Description": "Email of root user"
  },
  "userPassword": {
   "Type": "String",
   "Default": "Pa55word!",
   "Description": "Email of root user"
  }
 },
 "Resources": {
  "privateWebBucketDEC03662": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": {
     "Fn::Sub": "vid-dash-private-web-${uniqueId}"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/privateWebBucket/Resource"
   }
  },
  "privateWebBucketPolicy5939BD04": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "privateWebBucketDEC03662"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:GetObject",
       "Condition": {
        "StringEquals": {
         "AWS:SourceArn": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":cloudfront::",
            {
             "Ref": "AWS::AccountId"
            },
            ":distribution/",
            {
             "Ref": "CloudFrontDistributionBA64CE3A"
            }
           ]
          ]
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "cloudfront.amazonaws.com"
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "privateWebBucketDEC03662",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/privateWebBucket/Policy/Resource"
   }
  },
  "publicWebBucket98286A44": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": {
     "Fn::Sub": "vid-dash-public-web-${uniqueId}"
    },
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "GET"
       ],
       "AllowedOrigins": [
        "http*"
       ],
       "ExposedHeaders": [
        "Etag",
        "x-amx-meta-custom-header"
       ]
      }
     ]
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/publicWebBucket/Resource"
   }
  },
  "cloudwatchLogsPolicy70D2E599": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "Description": "",
    "ManagedPolicyName": "cloudwatch-logs-policy",
    "Path": "/",
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": "arn:aws:logs:*:*:*"
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/cloudwatchLogsPolicy/Resource"
   }
  },
  "edgeAuthLambdaRoleCEBFF37D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": [
         "edgelambda.amazonaws.com",
         "lambda.amazonaws.com"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Ref": "cloudwatchLogsPolicy70D2E599"
     }
    ],
    "RoleName": "edge-auth-role"
   },
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/edgeAuthLambdaRole/Resource"
   }
  },
  "edgeAuthLambdaFnServiceRoleBF0BC58A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": [
         "edgelambda.amazonaws.com",
         "lambda.amazonaws.com"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/edgeAuthLambda/Fn/ServiceRole/Resource"
   }
  },
  "edgeAuthLambdaFnD43D9B1D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Ref": "codeBucketName"
     },
     "S3Key": "lambdas/auth-edge.zip"
    },
    "FunctionName": "edge-auth-lambda",
    "Handler": "handler.handler_function",
    "Role": {
     "Fn::GetAtt": [
      "edgeAuthLambdaFnServiceRoleBF0BC58A",
      "Arn"
     ]
    },
    "Runtime": "python3.13",
    "Timeout": 5
   },
   "DependsOn": [
    "edgeAuthLambdaFnServiceRoleBF0BC58A"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/edgeAuthLambda/Fn/Resource"
   }
  },
  "edgeAuthLambdaFnCurrentVersionCFA71D38a087ccda01b5e6bde97be5065c47064d": {
   "Type": "AWS::Lambda::Version",
   "Properties": {
    "FunctionName": {
     "Ref": "edgeAuthLambdaFnD43D9B1D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/edgeAuthLambda/Fn/CurrentVersion/Resource"
   }
  },
  "CameraOACB9926B44": {
   "Type": "AWS::CloudFront::OriginAccessControl",
   "Properties": {
    "OriginAccessControlConfig": {
     "Description": "Camera CloudFront Origin Access Control",
     "Name": "Camera CF OAC",
     "OriginAccessControlOriginType": "s3",
     "SigningBehavior": "no-override",
     "SigningProtocol": "sigv4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/CameraOAC/Resource"
   }
  },
  "CloudFrontDistributionBA64CE3A": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "Aliases": [
      {
       "Fn::Sub": "www.${domainName}"
      }
     ],
     "Comment": "CF Distro",
     "DefaultCacheBehavior": {
      "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
      "Compress": true,
      "LambdaFunctionAssociations": [
       {
        "EventType": "viewer-request",
        "LambdaFunctionARN": {
         "Ref": "edgeAuthLambdaFnCurrentVersionCFA71D38a087ccda01b5e6bde97be5065c47064d"
        }
       }
      ],
      "TargetOriginId": "CloudFrontStackCloudFrontDistributionOrigin1E5559293",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "index.html",
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "DomainName": {
        "Fn::GetAtt": [
         "privateWebBucketDEC03662",
         "RegionalDomainName"
        ]
       },
       "Id": "CloudFrontStackCloudFrontDistributionOrigin1E5559293",
       "OriginAccessControlId": {
        "Fn::GetAtt": [
         "CameraOACB9926B44",
         "Id"
        ]
       },
       "OriginCustomHeaders": [
        {
         "HeaderName": "DomainName",
         "HeaderValue": {
          "Ref": "domainName"
         }
        }
       ],
       "S3OriginConfig": {
        "OriginAccessIdentity": ""
       }
      }
     ],
     "ViewerCertificate": {
      "AcmCertificateArn": {
       "Ref": "certificateArn"
      },
      "MinimumProtocolVersion": "TLSv1.2_2021",
      "SslSupportMethod": "sni-only"
     }
    }
   },
   "DependsOn": [
    "edgeAuthLambdaFnCurrentVersionCFA71D38a087ccda01b5e6bde97be5065c47064d",
    "edgeAuthLambdaFnD43D9B1D",
    "edgeAuthLambdaFnServiceRoleBF0BC58A"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/CloudFrontDistribution/Resource"
   }
  },
  "userPoolDC9497E0": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_phone_number",
       "Priority": 1
      },
      {
       "Name": "verified_email",
       "Priority": 2
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": true,
     "InviteMessageTemplate": {
      "EmailMessage": "Hello {username}. You have been invited to join the Surveillance System. Your temporary password is {####}",
      "EmailSubject": "Invite to Surveillance System"
     }
    },
    "AutoVerifiedAttributes": [
     "email"
    ],
    "EmailVerificationMessage": "Hello {username}. Your account has been created. Your verification code is {####}",
    "EmailVerificationSubject": "Verify your email for your new Private Camera System",
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "UserPoolName": "vid-user-pool",
    "UsernameAttributes": [
     "email"
    ],
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "Hello {username}. Your account has been created. Your verification code is {####}",
     "EmailSubject": "Verify your email for your new Private Camera System",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/userPool/Resource"
   }
  },
  "copyBetweenBucketsServiceRole8D6854A0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/copyBetweenBuckets/ServiceRole/Resource"
   }
  },
  "copyBetweenBucketsServiceRoleDefaultPolicyF43EE16F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "codeBucketName"
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "codeBucketName"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "privateWebBucketDEC03662",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "publicWebBucket98286A44",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "copyBetweenBucketsServiceRoleDefaultPolicyF43EE16F",
    "Roles": [
     {
      "Ref": "copyBetweenBucketsServiceRole8D6854A0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/copyBetweenBuckets/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "copyBetweenBuckets89CEF446": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Ref": "codeBucketName"
     },
     "S3Key": "lambdas/copy-web-code.zip"
    },
    "Handler": "handler.handler_function",
    "Role": {
     "Fn::GetAtt": [
      "copyBetweenBucketsServiceRole8D6854A0",
      "Arn"
     ]
    },
    "Runtime": "python3.13",
    "Timeout": 900
   },
   "DependsOn": [
    "copyBetweenBucketsServiceRoleDefaultPolicyF43EE16F",
    "copyBetweenBucketsServiceRole8D6854A0"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/copyBetweenBuckets/Resource"
   }
  },
  "copyPublicWebResources": {
   "Type": "AWS::CloudFormation::CustomResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "copyBetweenBuckets89CEF446",
      "Arn"
     ]
    },
    "sourceBucket": {
     "Ref": "codeBucketName"
    },
    "destinationBucket": {
     "Ref": "publicWebBucket98286A44"
    },
    "keys": [
     "public-web"
    ]
   },
   "DependsOn": [
    "copyBetweenBucketsServiceRoleDefaultPolicyF43EE16F"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/copyPublicWebResources/Default"
   }
  },
  "copyPrivateWebResources": {
   "Type": "AWS::CloudFormation::CustomResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "copyBetweenBuckets89CEF446",
      "Arn"
     ]
    },
    "sourceBucket": {
     "Ref": "codeBucketName"
    },
    "destinationBucket": {
     "Ref": "privateWebBucketDEC03662"
    },
    "keys": [
     "private-web"
    ]
   },
   "DependsOn": [
    "copyBetweenBucketsServiceRoleDefaultPolicyF43EE16F"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/copyPrivateWebResources/Default"
   }
  }
 },
 "Rules": {}
}