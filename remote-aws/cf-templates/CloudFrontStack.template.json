{
 "Parameters": {
  "uniqueId": {
   "Type": "String",
   "AllowedPattern": "^[a-z0-9-]{1,32}$",
   "Description": "Unique element for resource naming"
  },
  "publicUniqueId": {
   "Type": "String",
   "Description": "Unique element for public resource naming"
  },
  "codeBucketName": {
   "Type": "String",
   "Default": "instruct-code-2560df37ccbefd6b43eeb50fdc8abe7f",
   "AllowedPattern": "^[a-z0-9.-]{1,63}$",
   "Description": "Code bucket name"
  },
  "codeBucketRegion": {
   "Type": "String",
   "Default": "us-east-1",
   "AllowedPattern": "^[a-z0-9-]{1,12}$",
   "Description": "Code Bucket Region"
  },
  "domainName": {
   "Type": "String",
   "AllowedPattern": "[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)",
   "Description": "Registered Domain Name"
  },
  "certificateArn": {
   "Type": "String",
   "AllowedPattern": "^[a-z0-9\\.\\/\\:-]{1,2048}$",
   "Description": "ARN of certificate"
  },
  "userEmail": {
   "Type": "String",
   "Description": "Email of root user"
  },
  "userPassword": {
   "Type": "String",
   "Default": "Pa55word!",
   "Description": "Email of root user"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Resources": {
  "privateWebBucketDEC03662": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": {
     "Fn::Sub": "vid-dash-private-web-${uniqueId}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/privateWebBucket/Resource"
   }
  },
  "privateWebBucketPolicy5939BD04": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "privateWebBucketDEC03662"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:ListBucket"
       ],
       "Condition": {
        "StringEquals": {
         "AWS:SourceArn": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":cloudfront::",
            {
             "Ref": "AWS::AccountId"
            },
            ":distribution/",
            {
             "Ref": "cloudFrontDistributionF6A12875"
            }
           ]
          ]
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "cloudfront.amazonaws.com"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "privateWebBucketDEC03662",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "privateWebBucketDEC03662",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/privateWebBucket/Policy/Resource"
   }
  },
  "userPoolDC9497E0": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_phone_number",
       "Priority": 1
      },
      {
       "Name": "verified_email",
       "Priority": 2
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": true,
     "InviteMessageTemplate": {
      "EmailMessage": "Hello {username}. You have been invited to join the Surveillance System. Your temporary password is {####} - please use this to log in for the first time.",
      "EmailSubject": "Invite to Surveillance System"
     }
    },
    "AutoVerifiedAttributes": [
     "email"
    ],
    "EmailVerificationMessage": "Hello {username}. Your account has been created. Your verification code is {####}",
    "EmailVerificationSubject": "Verify your email for your new Private Camera System",
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "UserPoolName": "vid-user-pool",
    "UsernameAttributes": [
     "email"
    ],
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "Hello {username}. Your account has been created. Your verification code is {####}",
     "EmailSubject": "Verify your email for your new Private Camera System",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/userPool/Resource"
   }
  },
  "userPooluserPoolDashDomain046B4BF1": {
   "Type": "AWS::Cognito::UserPoolDomain",
   "Properties": {
    "CustomDomainConfig": {
     "CertificateArn": {
      "Ref": "certificateArn"
     }
    },
    "Domain": {
     "Fn::Sub": "auth.${domainName}"
    },
    "UserPoolId": {
     "Ref": "userPoolDC9497E0"
    }
   },
   "DependsOn": [
    "userPooldashUserPoolClientDescribeCognitoUserPoolClientCustomResourcePolicyFDB59444",
    "userPooldashUserPoolClientDescribeCognitoUserPoolClient16EDAB39",
    "userPooldashUserPoolClient7B44A8F5",
    "userPoolDC9497E0"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/userPool/userPoolDashDomain/Resource"
   }
  },
  "userPooldashUserPoolClient7B44A8F5": {
   "Type": "AWS::Cognito::UserPoolClient",
   "Properties": {
    "AllowedOAuthFlows": [
     "code"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "profile",
     "phone",
     "email",
     "openid",
     "aws.cognito.signin.user.admin"
    ],
    "CallbackURLs": [
     {
      "Fn::Sub": "https://www.${domainName}"
     },
     {
      "Fn::Sub": "https://www.${domainName}/"
     }
    ],
    "DefaultRedirectURI": {
     "Fn::Sub": "https://www.${domainName}"
    },
    "GenerateSecret": true,
    "PreventUserExistenceErrors": "LEGACY",
    "SupportedIdentityProviders": [
     "COGNITO"
    ],
    "UserPoolId": {
     "Ref": "userPoolDC9497E0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/userPool/dashUserPoolClient/Resource"
   }
  },
  "userPooldashUserPoolClientDescribeCognitoUserPoolClient16EDAB39": {
   "Type": "Custom::DescribeCognitoUserPoolClient",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"region\":\"us-east-1\",\"service\":\"CognitoIdentityServiceProvider\",\"action\":\"describeUserPoolClient\",\"parameters\":{\"UserPoolId\":\"",
       {
        "Ref": "userPoolDC9497E0"
       },
       "\",\"ClientId\":\"",
       {
        "Ref": "userPooldashUserPoolClient7B44A8F5"
       },
       "\"},\"physicalResourceId\":{\"id\":\"",
       {
        "Ref": "userPooldashUserPoolClient7B44A8F5"
       },
       "\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"region\":\"us-east-1\",\"service\":\"CognitoIdentityServiceProvider\",\"action\":\"describeUserPoolClient\",\"parameters\":{\"UserPoolId\":\"",
       {
        "Ref": "userPoolDC9497E0"
       },
       "\",\"ClientId\":\"",
       {
        "Ref": "userPooldashUserPoolClient7B44A8F5"
       },
       "\"},\"physicalResourceId\":{\"id\":\"",
       {
        "Ref": "userPooldashUserPoolClient7B44A8F5"
       },
       "\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "userPooldashUserPoolClientDescribeCognitoUserPoolClientCustomResourcePolicyFDB59444"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/userPool/dashUserPoolClient/DescribeCognitoUserPoolClient/Resource/Default"
   }
  },
  "userPooldashUserPoolClientDescribeCognitoUserPoolClientCustomResourcePolicyFDB59444": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "cognito-idp:DescribeUserPoolClient",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "userPoolDC9497E0",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "userPooldashUserPoolClientDescribeCognitoUserPoolClientCustomResourcePolicyFDB59444",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/userPool/dashUserPoolClient/DescribeCognitoUserPoolClient/CustomResourcePolicy/Resource"
   }
  },
  "cognitoEndpointParamC1A7C797": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "DataType": "text",
    "Description": "Cognito Endpoint",
    "Name": "cognito-endpoint",
    "Tier": "Standard",
    "Type": "String",
    "Value": {
     "Fn::GetAtt": [
      "userPooluserPoolDashDomain046B4BF1",
      "CloudFrontDistribution"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/cognitoEndpointParam/Resource"
   }
  },
  "userPoolIdParam85CE1A9E": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "DataType": "text",
    "Description": "Cognito User Pool ID",
    "Name": "user-pool-id",
    "Tier": "Standard",
    "Type": "String",
    "Value": {
     "Ref": "userPoolDC9497E0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/userPoolIdParam/Resource"
   }
  },
  "userPoolClientIdParam463E0F5C": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "DataType": "text",
    "Description": "Cognito User Pool Client ID",
    "Name": "user-pool-client-id",
    "Tier": "Standard",
    "Type": "String",
    "Value": {
     "Ref": "userPooldashUserPoolClient7B44A8F5"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/userPoolClientIdParam/Resource"
   }
  },
  "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource"
   }
  },
  "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-1"
     },
     "S3Key": "4cd2f2411231aa073e609dc99a49b5c5e974252bf9abf0f9350d237d17cce8be.zip"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 120
   },
   "DependsOn": [
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/AWS679f53fac002430cb0da5b7982bd2287/Resource",
    "aws:asset:path": "asset.4cd2f2411231aa073e609dc99a49b5c5e974252bf9abf0f9350d237d17cce8be",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "userPoolClientSecretA9163839": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "DataType": "text",
    "Description": "Cognito User Pool Client Secret",
    "Name": "user-pool-client-secret",
    "Tier": "Standard",
    "Type": "String",
    "Value": {
     "Fn::GetAtt": [
      "userPooldashUserPoolClientDescribeCognitoUserPoolClient16EDAB39",
      "UserPoolClient.ClientSecret"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/userPoolClientSecret/Resource"
   }
  },
  "ssmGetParameterPolicy6E238F58": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "Description": "",
    "ManagedPolicyName": "auth-lambda-get-ssm-parameter-policy",
    "Path": "/",
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ssm:GetParameter",
        "ssm:GetParameters"
       ],
       "Effect": "Allow",
       "Resource": "arn:aws:ssm:*:*:*"
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/ssmGetParameterPolicy/Resource"
   }
  },
  "cloudWatchLogsPolicy62FA4890": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "Description": "",
    "ManagedPolicyName": "auth-lambda-cloudwatch-logs-policy",
    "Path": "/",
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": "arn:aws:logs:*:*:*"
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/cloudWatchLogsPolicy/Resource"
   }
  },
  "edgeAuthRole0905A893": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": [
         "edgelambda.amazonaws.com",
         "lambda.amazonaws.com"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Ref": "cloudWatchLogsPolicy62FA4890"
     },
     {
      "Ref": "ssmGetParameterPolicy6E238F58"
     }
    ],
    "RoleName": "edge-auth-role"
   },
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/edgeAuthRole/Resource"
   }
  },
  "edgeAuthLambdaFnD43D9B1D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Ref": "codeBucketName"
     },
     "S3Key": "lambdas/edge-auth.zip"
    },
    "FunctionName": "edge-auth",
    "Handler": "handler.handler_function",
    "LoggingConfig": {
     "ApplicationLogLevel": "DEBUG",
     "LogFormat": "JSON"
    },
    "Role": {
     "Fn::GetAtt": [
      "edgeAuthRole0905A893",
      "Arn"
     ]
    },
    "Runtime": "python3.13",
    "Timeout": 5
   },
   "DependsOn": [
    "edgeAuthRole0905A893"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/edgeAuthLambda/Fn/Resource"
   }
  },
  "edgeAuthLambdaFnCurrentVersionCFA71D38843eadd0a1fcea75bd4c35402698ce78": {
   "Type": "AWS::Lambda::Version",
   "Properties": {
    "FunctionName": {
     "Ref": "edgeAuthLambdaFnD43D9B1D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/edgeAuthLambda/Fn/CurrentVersion/Resource"
   }
  },
  "cloudFrontDistributionOrigin1S3OriginAccessControl9F9A03CE": {
   "Type": "AWS::CloudFront::OriginAccessControl",
   "Properties": {
    "OriginAccessControlConfig": {
     "Name": "CloudFrontStackcloudFrontDisOrigin1S3OriginAccessControlBC0112C1",
     "OriginAccessControlOriginType": "s3",
     "SigningBehavior": "always",
     "SigningProtocol": "sigv4"
    }
   },
   "DependsOn": [
    "edgeAuthLambdaFnCurrentVersionCFA71D38843eadd0a1fcea75bd4c35402698ce78",
    "edgeAuthLambdaFnD43D9B1D"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/cloudFrontDistribution/Origin1/S3OriginAccessControl/Resource"
   }
  },
  "cloudFrontDistributionF6A12875": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "Aliases": [
      {
       "Fn::Sub": "www.${domainName}"
      },
      {
       "Ref": "domainName"
      }
     ],
     "Comment": "CloudFront Distribution",
     "DefaultCacheBehavior": {
      "CachePolicyId": "2e54312d-136d-493c-8eb9-b001f22f67d2",
      "Compress": true,
      "LambdaFunctionAssociations": [
       {
        "EventType": "viewer-request",
        "LambdaFunctionARN": {
         "Ref": "edgeAuthLambdaFnCurrentVersionCFA71D38843eadd0a1fcea75bd4c35402698ce78"
        }
       }
      ],
      "TargetOriginId": "CloudFrontStackcloudFrontDistributionOrigin10E3CC188",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "index.html",
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "DomainName": {
        "Fn::GetAtt": [
         "privateWebBucketDEC03662",
         "RegionalDomainName"
        ]
       },
       "Id": "CloudFrontStackcloudFrontDistributionOrigin10E3CC188",
       "OriginAccessControlId": {
        "Fn::GetAtt": [
         "cloudFrontDistributionOrigin1S3OriginAccessControl9F9A03CE",
         "Id"
        ]
       },
       "S3OriginConfig": {
        "OriginAccessIdentity": ""
       }
      }
     ],
     "ViewerCertificate": {
      "AcmCertificateArn": {
       "Ref": "certificateArn"
      },
      "MinimumProtocolVersion": "TLSv1.2_2021",
      "SslSupportMethod": "sni-only"
     }
    }
   },
   "DependsOn": [
    "edgeAuthLambdaFnCurrentVersionCFA71D38843eadd0a1fcea75bd4c35402698ce78",
    "edgeAuthLambdaFnD43D9B1D"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/cloudFrontDistribution/Resource"
   }
  },
  "domainNameParam5AB6B878": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "DataType": "text",
    "Description": "Domain Name",
    "Name": "domain-name",
    "Tier": "Standard",
    "Type": "String",
    "Value": {
     "Ref": "domainName"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/domainNameParam/Resource"
   }
  },
  "copyBetweenBucketsServiceRole8D6854A0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/copyBetweenBuckets/ServiceRole/Resource"
   }
  },
  "copyBetweenBucketsServiceRoleDefaultPolicyF43EE16F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "codeBucketName"
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "codeBucketName"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "privateWebBucketDEC03662",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "copyBetweenBucketsServiceRoleDefaultPolicyF43EE16F",
    "Roles": [
     {
      "Ref": "copyBetweenBucketsServiceRole8D6854A0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/copyBetweenBuckets/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "copyBetweenBuckets89CEF446": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Ref": "codeBucketName"
     },
     "S3Key": "lambdas/copy-web-code.zip"
    },
    "Handler": "handler.handler_function",
    "Role": {
     "Fn::GetAtt": [
      "copyBetweenBucketsServiceRole8D6854A0",
      "Arn"
     ]
    },
    "Runtime": "python3.13",
    "Timeout": 900
   },
   "DependsOn": [
    "copyBetweenBucketsServiceRoleDefaultPolicyF43EE16F",
    "copyBetweenBucketsServiceRole8D6854A0"
   ],
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/copyBetweenBuckets/Resource"
   }
  },
  "copyPrivateWebResources": {
   "Type": "AWS::CloudFormation::CustomResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "copyBetweenBuckets89CEF446",
      "Arn"
     ]
    },
    "sourceBucket": {
     "Ref": "codeBucketName"
    },
    "destinationBucket": {
     "Ref": "privateWebBucketDEC03662"
    },
    "keys": [
     "private-web"
    ]
   },
   "DependsOn": [
    "copyBetweenBucketsServiceRoleDefaultPolicyF43EE16F"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/copyPrivateWebResources/Default"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/3WSzU7DMBCEn4W7a2h64dqmcEOtGsG1cp1NtK2zrrxrCory7ig/TQISp/1mPJa8Iyd6+Zzopwdz44XNLwuHJ11nYuxFpQXtTTAVCARlbnyseaXrTbQXkI1hUD22uYH6sfcO7fdk97pR1peE4nX9zhD23rs2MvIdtr4ySPOjwbnL1CGQzAO90yhnqlNudJ0hlQ7E02skK+hJjZAWk/kBgQdvwEahqXQ9LTDQwTtoZTffDJkS8in0y2gUc9U2GJDKqb55l43i1dEwg7Bet0NZ52NeBE+ia/i6QsAKSIzTL3kJ43u3yBLwFDuRrXYBS6S1tcCcepLQF/qPPb/cNOoA7GOwoGxk8dUxDJr1+sZp542Rv7KgOe+iXKOobpFMTIlUNop8DvrMj59Jopft9zoz4iJEEqxAH/r5A+vYEZB7AgAA"
   },
   "Metadata": {
    "aws:cdk:path": "CloudFrontStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "UserPoolId": {
   "Value": {
    "Ref": "userPoolDC9497E0"
   }
  },
  "UserPoolClientId": {
   "Value": {
    "Ref": "userPooldashUserPoolClient7B44A8F5"
   }
  },
  "cloudFrontDistributionId": {
   "Value": {
    "Ref": "cloudFrontDistributionF6A12875"
   }
  },
  "cloudFrontDistributionDomainName": {
   "Value": {
    "Fn::GetAtt": [
     "cloudFrontDistributionF6A12875",
     "DomainName"
    ]
   }
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}