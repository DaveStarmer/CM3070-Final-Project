{
 "Parameters": {
  "uniqueId": {
   "Type": "String",
   "AllowedPattern": "^[a-z0-9-]{1,32}$",
   "Description": "Unique element for bucket naming"
  },
  "codeBucketName": {
   "Type": "String",
   "Default": "instruct-code-2560df37ccbefd6b43eeb50fdc8abe7f",
   "AllowedPattern": "^[a-z0-9.-]{1,63}$",
   "Description": "Private Code Bucket Name"
  }
 },
 "Resources": {
  "videoUpload4F12A8C9": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": {
     "Fn::Sub": "vid-dash-upload-${uniqueId}"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "DashboardStack/videoUpload/Resource"
   }
  },
  "videoStorage429F1872": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": {
     "Fn::Sub": "vid-dash-video-${uniqueId}"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "DashboardStack/videoStorage/Resource"
   }
  },
  "activationsTable6047EFE0": {
   "Type": "AWS::DynamoDB::GlobalTable",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "filename",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "filename",
      "KeyType": "HASH"
     }
    ],
    "Replicas": [
     {
      "Region": {
       "Ref": "AWS::Region"
      }
     }
    ],
    "TableName": "activationsTable"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "DashboardStack/activationsTable/Resource"
   }
  },
  "notificiationLambdaServiceRole5F9AA59F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DashboardStack/notificiationLambda/ServiceRole/Resource"
   }
  },
  "notificiationLambdaServiceRoleDefaultPolicyAF7A6E3F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "videoUpload4F12A8C9",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "videoUpload4F12A8C9",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:DeleteObject*",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "videoUpload4F12A8C9",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "videoStorage429F1872",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchWriteItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "activationsTable6047EFE0",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "notificiationLambdaServiceRoleDefaultPolicyAF7A6E3F",
    "Roles": [
     {
      "Ref": "notificiationLambdaServiceRole5F9AA59F"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DashboardStack/notificiationLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "notificiationLambdaC56D9A50": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Ref": "codeBucketName"
     },
     "S3Key": "lambdas/notification-408c1933376591a108bb48dd3f147a0f.zip"
    },
    "Description": "copies clips to storage bucket, writes to database",
    "Environment": {
     "Variables": {
      "DYNAMODB_TABLE": {
       "Ref": "activationsTable6047EFE0"
      },
      "SOURCE_BUCKET": {
       "Ref": "videoUpload4F12A8C9"
      },
      "DESTINATION_BUCKET": {
       "Ref": "videoStorage429F1872"
      }
     }
    },
    "FunctionName": "notification-lambda",
    "Handler": "handler.handler_function",
    "Role": {
     "Fn::GetAtt": [
      "notificiationLambdaServiceRole5F9AA59F",
      "Arn"
     ]
    },
    "Runtime": "python3.13",
    "Timeout": 300
   },
   "DependsOn": [
    "notificiationLambdaServiceRoleDefaultPolicyAF7A6E3F",
    "notificiationLambdaServiceRole5F9AA59F"
   ],
   "Metadata": {
    "aws:cdk:path": "DashboardStack/notificiationLambda/Resource"
   }
  },
  "notificationTriggerRule480EE58C": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventPattern": {
     "source": [
      "aws.s3"
     ],
     "detail-type": [
      {
       "equals-ignore-case": "object created"
      }
     ],
     "detail": {
      "bucket": {
       "name": [
        {
         "Ref": "videoUpload4F12A8C9"
        }
       ]
      }
     }
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "notificiationLambdaC56D9A50",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DashboardStack/notificationTriggerRule/Resource"
   }
  },
  "notificationTriggerRuleAllowEventRuleDashboardStacknotificiationLambdaD7E09B9F411FED25": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "notificiationLambdaC56D9A50",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "notificationTriggerRule480EE58C",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "DashboardStack/notificationTriggerRule/AllowEventRuleDashboardStacknotificiationLambdaD7E09B9F"
   }
  }
 },
 "Conditions": {},
 "Rules": {}
}